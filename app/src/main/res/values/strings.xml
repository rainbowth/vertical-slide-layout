<resources>
    <string name="app_name">App</string>
    <string name="text">有点意思的是这个ViewGroup的事件分发处理(以下为了方便，我把从上到下的第一个子View称为第一页，第二个子View称为第二页)：
个自定义的ViewGroup都不要拦截水平方向的move事
对于第一页来说，滑动到最底部时，ViewGroup才开始拦截向个自定义的ViewGroup都不要拦截水平方向的move事件；
对于第一页来说，滑动到最底部时，ViewGroup才开始拦截向上拉的事件；
对于第二页来说本就搞定了。接下来就是代码实现
无论何时，这个自定义有点意思的是这个ViewGroup的事件分发处理(以下为了方便，我把从上到下的第一个子View称为第一页，第二个子View称为第二页)：
何时，这个自定义方向的move事
对于第一页来说，滑动到最底部时，ViewGroup才开始拦截向个自定义的ViewGroup都不要拦截水平方向的move事件；
对于第一页来说，滑动到最底部时，ViewGroup才开始拦截向上拉的事件；
对于第二页来说本就搞定了。接下来就是代码来说本就搞定了。接下来就是代码实现
无论何时，这个自定义有点意思的是这个ViewGroup的事件分发处理(以下为了方便，我把从上到下的第一个子View称为第一页，第二个子View称为第二页)：
何时，这个自定义的ViewGroup都不要拦截水平方向的move事
对于第一页来说，滑动到最底部时，ViewGroup才开始拦截向个自定义的ViewGroup都不要拦截水平方向的move事件；
对于第一页来说，滑动到最底部时，ViewGroup才开始拦截向上拉的事件；
对于第二页来说本就搞定了。接下来就是代码
对于第二页来说本就搞定了。接下来就是代码实现啦。有点意思的是这个ViewGroup的事件分发处理(以下为了方便，我把从上到下的第一个子View称为第一页，第二个子View称为第二页)：
何时，这个自定义的ViewGroup都不要拦截水平方向的move事个自定义的ViewGroup都不要拦截水平方向的move事
对于第一页来说，滑动到最底部时，ViewGroup才开始拦截向个自定义的ViewGroup都不要拦截水平方向的move事件；
对于第一页来说，滑动到最底部时，ViewGroup才开始拦截向上拉的事件；
对于第二页来说本就搞定了。接下来就是代码实现
对于第一页来说，滑动到最底部时，ViewGroup才开始拦截向
基本上，抓住这五点，这个自定义ViewGroup的事件处理基本就搞定了。接下来就是代码实现啦。重写onI重写onInterceptTouchEvent方法去决定啥时候要拦截事件，重写onTouchEvent方法去在ViewGroup要拦截的时候确定到底怎么使用这个事件。

总体来说，还是很简单的一个自定义View，实现起来也不难。当然实现的过程中也有一些细节需要考虑，比如：手指抬起时要平滑的切到下一页，再比如在两页切换的时候开放接口给外界，方便处理业务逻辑等。
    </string>
    <string name="text2">自定义的ViewGroup都不要拦截水平方向的move事
对于第一页来说，滑动到最底部时，ViewGroup才开始拦截向个自定义的ViewGroup都不要拦截水平方向的move事件；
对于第一页来说，滑动到最底部时，ViewGroup才开始拦截向上拉的事件；
对于第二页来说本就搞定了。接下来就是代码
对于第二页来说本就搞定了。接下来就是代码实现啦。有点意思的是这个ViewGroup的事件分发处理(以下为了方便，我把从上到下的第一个子View称为第一页，第二个子View称为第二页)：
何时，这个自定义的ViewGroup都不要拦截水平方向的move事个自定义的ViewGroup都不要拦截水平方向的move事
对于第一页来说，滑动到最底部时，ViewGroup才开始拦截向个自定义的ViewGroup都不要拦截水平方向的move事件；
对于第一页来说，滑动到最底部时，ViewGroup才开始拦截向上拉的事件；
对于第二页来说本就搞定了。接下来就是代码实现滑动到最底部时，ViewGroup才开始拦截向个自定义的ViewGroup都不要拦截水平方向的move事件；
对于第一页来说，滑动到最底部时，ViewGroup才开始拦截向上拉的事件；
对于第二页来说本就搞定了。接下来就是代码本就搞定了。接下来就是代码
对于第二页来说本就搞定了。接下来就是代码实现啦。有点意思的是这个ViewGroup的事件分发处理(以下为了方便，我把从上到下的第一个子View称为第一页，第二个子View称为第二页)：
何时，这个自定义的ViewGroup都不要拦截水平方向的move事个自定义的ViewGroup都不要拦截水平方向的move事
对于第一页来说，滑动到最底部时，ViewGroup才开始拦截向个自定义的ViewGroup都不要拦截水平方向的move事件；
对于第一页来说，滑动到最底
对于第二页来说本就搞定了。接下来就是代码实现啦。有点意思的是这个ViewGroup的事件分发处理(以下为了方便，我把从上到下的第一个子View称为第一页，第二个子View称为第二页)：
何时，这个自定义的ViewGroup都不要
对于第一页来说，滑动到最底部时，ViewGroup才开始拦截向
基本上，抓住这五点，这个自定义ViewGroup的事件处理基本就搞定了。接下来就是代码实现啦。重写onI重写onInterceptTouchEvent方法去决定啥时候要拦截事件，重写onTouchEvent方法去在ViewGroup要拦截的时候确定到底怎么使用这个事件。

总体来说，还是很简单的一个自定义View，实现起来也不难。当然实现的过程中也</string>
</resources>
